volumes:
  kong_data: {}
  n8n_data: {}

networks:
  lan-net:
    external: true
  wan-net:
    external: true

services:
  dns-server:
    container_name: dns-server
    image: coredns/coredns:latest
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    volumes:
      - ./dns/Corefile:/Corefile
    command: -conf /Corefile
    restart: always
    networks:
      wan-net:
        ipv4_address: 192.168.3.30

  kong-database:
    container_name: kong-postgres
    image: postgres:latest
    restart: always
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      lan-net:
        ipv4_address: 192.168.2.40

  kong-migration:
    container_name: kong-migration
    image: ${KONG_DOCKER_TAG:-kong:latest}
    command: kong migrations bootstrap
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      - kong-database
    networks:
      - lan-net

  kong-manager:
    container_name: kong-manager
    image: ${KONG_DOCKER_TAG:-kong:latest}
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_LISTEN: 0.0.0.0:80, 0.0.0.0:443 ssl
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      COMMOND_HOST: tung.thlone
    depends_on:
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "80:80"
      - "8001:8001"
      - "8002:8002"
      - "443:443"
    networks:
      lan-net:
        ipv4_address: 192.168.2.20
      wan-net:
        ipv4_address: 192.168.3.20

  server:
    container_name: server
    image: server:latest
    build:
      context: ./server
    cap_add:
      - ALL
    restart: always
    networks:
      lan-net:
        ipv4_address: 192.168.2.30
  n8n:
    container_name: n8n
    image: n8nio/n8n:latest
    restart: always
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=sqlite
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=192.168.3.40
      - N8N_PORT=5678
      - WEBHOOK_TUNNEL_URL=http://192.168.2.50:5678
      - N8N_SECURE_COOKIE=false
      - COMMOND_HOST=tung.thlone
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      wan-net:
        ipv4_address: 192.168.3.40
      lan-net:
        ipv4_address: 192.168.2.50
